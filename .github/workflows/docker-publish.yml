name: Docker Build and Publish

on:
  push:
    branches: [main]
  release:
    types: [published]
  repository_dispatch:
    types: [release-published]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract the SHA for the release tag
      # This step serves as the default for the workflow
      # If niether a release nor a repository dispatch event is triggered,
      # it will use the SHA of the latest commit on the main branch
      - name: Extract SHA for release tag
        id: meta
        run: |
          SHA=$(git rev-parse --short HEAD)
          echo "RELEASE_TAG=${SHA}" >> $GITHUB_ENV

      # Runs when triggered by a repository dispatch event from publish-release workflow
      - name: Get release tag from payload
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "Using tag: ${{ github.event.client_payload.tag }}"
          echo "RELEASE_TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV

      # When triggered by a release event from GitHub
      - name: Get tag from release
        if: github.event_name == 'release'
        run: |
          echo "Using release tag: ${{ github.event.release.tag_name }}"
          echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/jellyhook-api:${{ env.RELEASE_TAG }}

      - name: Build and push Worker image
        uses: docker/build-push-action@v5
        with:
          context: ./workers
          file: ./workers/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/jellyhook-worker:${{ env.RELEASE_TAG }}
